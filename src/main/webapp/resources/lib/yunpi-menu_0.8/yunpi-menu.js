/** * 定义Yunpi菜单，只支持二级菜单 * 菜单定义接受json参数，参数详情如下 * { *     data:[], //菜单数据，必须，无默认值，二级菜单需要挂载在一级菜单节点上，参数名为chidren，以jsonarray方式挂载 *     url:"",  //菜单节点的连接地址，必须，无默认值 *     name:"",  //菜单节点的属性名称，必须，无默认值 *     id:"",  //菜单在页面上的挂载点ID，必须，无默认值 *     onClickMenu:function(target){}   //点击菜单的回调函数，可在此添加逻辑处理 * } * *菜单类方法如下： * getMenuUrl方法，传入点击菜单的target，获取所点击菜单的连接地址（即菜单定义中指定的url字段的值）。 * getMenuName方法，传入点击菜单的target，获取所点击菜单的名称（即菜单定义中指定的name字段的值）。 * * 菜单使用示例： *   var yunpiMenu = new YunpiMenu({            data:[{                name:"基础管理",                url:"#",                chidren:[{                    name:"字典管理",                    url:"/tpl/basicManage/dictionary.html"                },{                    name:"配置管理",                    url:"/tpl/basicManage/dictionary.html"                },{                    name:"用户管理",                    url:"/tpl/basicManage/setting.html"                }]            }],            url:'url',            name:'name',            onClickMenu:function(menuNode){                var url = yunpiMenu.getMenuUrl(menuNode);                console.log(url);                var name = yunpiMenu.getMenuName(menuNode);                console.log(name);            },            id:"basicMenu"        }); * / /** * @param _config * @constructor */YunpiMenu=function(_config){    _config = _config || {name:"name",url:"url",id:"id"};    var lableName = _config.name;    var urlName = _config.url;    var targId = _config.id;	//拼装组件元素	var menuHtml = '<div class="yunpi-menu"><ul>';	var data = _config.data;    if(data && data.length > 0){    	for(var i = 0 ; i < data.length ; i++){            menuHtml+='<li class="yunpi-nav-list"><label urlName="'+data[i][urlName]+'" lableName="'+data[i][lableName]+'"><span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span><i></i>'+data[i][lableName]+'</label>';            if(data[i].chidren && data[i].chidren.length > 0){            	var chidrenX = data[i].chidren;                menuHtml += '<div class="yunpi-li-list">';                for(var j = 0 ; j < chidrenX.length ; j++){                    menuHtml+='<a href="#" urlName="'+chidrenX[j][urlName]+'" lableName="'+chidrenX[j][lableName]+'">'+chidrenX[j][lableName]+'</a>';                }                menuHtml += '</div>';			}            menuHtml+='</li>';		}        menuHtml += '</ul>';	}    menuHtml += '</div>';    $('#'+targId).append(menuHtml);    //添加一级菜单点击事件    $('.yunpi-nav-list').find('label').unbind().bind('click',function(){        //判断菜单是否是显示状态，如果是则隐藏二级菜单，如果不是，现将其它可能展开的菜单关闭，然后显示该菜单        var isShow = $(this).next().is(":visible");        if(isShow){            $(this).next().animate({height:'toggle'},100);//动画收缩            $(this).find('i').removeClass('on');        }else{            $(".yunpi-li-list").hide();            $('.yunpi-nav-list label i').removeClass('on');            $(this).find('i').addClass('on');            $(this).next().animate({height:'toggle'},200);//动画展开        }        if(_config.onClickMenu){            _config.onClickMenu(this);        }    });    //添加二级菜单点击事件    $('.yunpi-li-list a').unbind().bind('click',function(){        $('.yunpi-li-list a').removeClass('menu-click-type');        $(this).addClass('menu-click-type');        if(_config.onClickMenu){            _config.onClickMenu(this);        }    });    this.id=targId;};/** * 获取当前点击的菜单的URL * @param target * @returns {jQuery} */YunpiMenu.prototype.getMenuUrl = function(target){    return $(target).attr("urlName");}/** * 获取当前点击的菜单的名称 * @param target * @returns {jQuery} */YunpiMenu.prototype.getMenuName = function(target){    return $(target).attr("lableName");}/** * 获取当前菜单是否是叶子节点 * @param target * @returns {boolean} */YunpiMenu.prototype.isLeaf = function(target){    if($(target)[0].tagName.toLowerCase() == 'a'){        return true;    }else{        return false;    }}/** * 获取父级菜单名称 * @param target * @returns {boolean} */YunpiMenu.prototype.getParentMenuName = function(target){    if($(target)[0].tagName.toLowerCase() == 'a'){        var $this = $(target).closest('li').find('label');        if($this){            return $this.attr('lableName');        }else{            return null;        }    }else{        return null;    }}/** * 打开指定的菜单。 * @param menuNum //菜单索引，从0开始，默认值为0 * @param itemNum //菜单项索引，从0开始，默认值为0 */YunpiMenu.prototype.selectMenu = function(menuNum,itemNum){    if(!menuNum || !(typeof menuNum === 'number') || isNaN(menuNum)()){        menuNum = 0;    }    if(!itemNum || !(typeof itemNum === 'number') || isNaN(itemNum)()){        itemNum = 0;    }    var yunpiMenu = $("#"+this.id).find("ul:eq(0)");    if(yunpiMenu && menuNum != undefined && menuNum != null){        var menu = yunpiMenu.find('.yunpi-nav-list').eq(menuNum);        if(menu && menu.length > 0){            menu.find('label').trigger("click");            if(itemNum != undefined && itemNum != null){                var item = menu.find(".yunpi-li-list>a").eq(itemNum);                if(item && item.length > 0){                    item.trigger("click");                }            }        }    }}