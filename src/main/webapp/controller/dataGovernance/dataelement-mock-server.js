/** * 数据元列表获取 *分页数据 */Mock.mock(wwwroot+'/dataGovernance/dataElement',function(options) {    var result = {        total: 600,        rows:[]    };    var offsetNum = getPostParam(options).offset;    for(var i = 0 ; i < 20 ; i++){        result.rows.push(Mock.mock({            "id":/[a-z][A-Z][0-9]/,            "dataElementName":"数据元"+(offsetNum+i),            "dataElementCode":/[a-z][A-Z]{5,8}/,            "level":/gb|shb|db/,            "metamodelId":/1|2|3|4|5|6|7|8/,            "flag":/0|1|2/,            "dataFormat":/n3...5|n3.2|str18|boolen|yyyy-MM-dd/,            "valueDesc":"数据源X的值域必须是3到5位的数字",            "createTime":Mock.Random.datetime(),            "modifyTime":Mock.Random.datetime()        }));    };    return result;});//根据ID获取数据源信息Mock.mock(RegExp(wwwroot + '/dataGovernance/dataElement'+ ".*"),"get",function() {    return {        code:"code_200",        msg:"查询成功！",        data:Mock.mock({            "id":"123456",            "dataElementName":"测试数据元",            "dataElementCode":/[a-z][A-Z]{5,8}/,            "level":/gb|shb|db/,            "metamodelId":/1|2|3|4|5|6|7|8/,            "flag":/0|1|2/,            "dataFormat":"n3...5",            "valueDesc":"数据源X的值域必须是3到5位的数字",            "createTime":Mock.Random.datetime(),            "modifyTime":Mock.Random.datetime(),            "rules":[{                "id":"1",                "ruleName":"数据元规则1",                "ruleRegex":"^.{4,60}$",                "ruleType":/str|num|dt/            },{                "id":"2",                "ruleName":"数据元规则2",                "ruleRegex":"^.{4,60}$",                "ruleType":/str|num|dt/            }]        })    };});/** * 元模型获取，获取所有的元模型 */Mock.mock(wwwroot+'/dataGovernance/metamodel',function() {    return {        code:"code_200",        msg:"查询成功！",        data:[{            id:"1",            metamodelName:"string",            dataType:"string"        },{            id:"2",            metamodelName:"float",            dataType:"float"        },{            id:"3",            metamodelName:"boolen",            dataType:"boolen"        },{            id:"4",            metamodelName:"number",            dataType:"number"        },{            id:"5",            metamodelName:"double",            dataType:"double"        },{            id:"6",            metamodelName:"time",            dataType:"time"        },{            id:"7",            metamodelName:"date",            dataType:"date"        },{            id:"8",            metamodelName:"date-time",            dataType:"date-time"        }]    };});//数据元状态字典Mock.mock(wwwroot + '/base/api/dictionary/data_element_status',"get",function() {    return {        code:"code_200",        msg:"查询成功！",        data:[{            dicName:"启用",            dicCode:"1"        },{            dicName:"禁用",            dicCode:"2"        },{            dicName:"编辑",            dicCode:"0"        }]    };});//数据元级别字典Mock.mock(wwwroot + '/base/api/dictionary/data_element_level',"get",function() {    return {        code:"code_200",        msg:"查询成功！",        data:[{            dicName:"国家标准",            dicCode:"gb"        },{            dicName:"省标准",            dicCode:"shb"        },{            dicName:"地市标准",            dicCode:"db"        }]    };});/** * 获取数据元规则列表(不分页) *//** * 获取数据元规则列表 *分页数据 */Mock.mock(wwwroot+'/dataGovernance/dataElementRule',function() {    var result = {        code:"code_200",        msg:"查询成功！",        data:[]    };    for(var i = 0 ; i < 20 ; i++){        result.data.push(Mock.mock({            "id":i,            "ruleName":"数据元规则"+i,            "ruleRegex":"^.{4,60}$",            "ruleType":/str|num|dt/        }));    };    return result;});//规则分类字典Mock.mock(wwwroot + '/base/api/dictionary/data_element_rule_type',"get",function() {    return {        code:"code_200",        msg:"查询成功！",        data:[{            dicName:"字符类",            dicCode:"str"        },{            dicName:"数字类",            dicCode:"num"        },{            dicName:"日期类",            dicCode:"dt"        }]    };});